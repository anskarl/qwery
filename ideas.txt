DESIGN NOTES / IDEAS

************************************************************************
*       Fixed-length Format testing
************************************************************************

INSERT INTO 'fixed-data.txt' (Symbol^10, Name^40, Sector^40, Industry^40, LastTrade^10) WITH FIXED WIDTH
SELECT Symbol, Name, Sector, Industry, LastSale
FROM 'companylist.csv'
WHERE Industry = 'Oil/Gas Transmission'

************************************************************************
*      UPSERT testing
************************************************************************

UPSERT INTO 'jdbc:mysql://localhost:3306/test?table=company' (Symbol, Name, Sector, Industry, LastSale)
KEYED ON Symbol
WITH JDBC DRIVER 'com.mysql.jdbc.Driver'
SELECT Symbol, Name, Sector, Industry, CASE LastSale WHEN 'n/a' THEN NULL ELSE LastSale END
FROM 'companylist.csv'

UPSERT INTO 'jdbc:mysql://localhost:3306/test?table=company' (Symbol, Name, Sector, Industry, LastTrade)
KEYED ON Symbol
WITH JDBC DRIVER 'com.mysql.jdbc.Driver'
VALUES ('CQH','Cheniere Energy Partners LP Holdings, LLC','Public Utilities','Oil/Gas Transmission', 25.68)

************************************************************************
*       Data Resource testing
************************************************************************

SELECT visitorId, adGroup, program, pageLabel, categoryId, referrerDomain
FROM "kafka://dev001:9093?topic=weblogs&group_id=ldtest1"
WITH JSON FORMAT
WITH PROPERTIES "./kafka-auth.properties"
LIMIT 5;

SELECT visitorId, adGroup, program, pageLabel, categoryId, referrerDomain
FROM "kafka://dev001:9093?topic=weblogs&group_id=ldtest1"
WITH AVRO './pixall-v5.avsc'
WITH PROPERTIES "./kafka-auth.properties"
LIMIT 5;

SELECT Symbol, Name, Sector, Industry, `Summary Quote`
INTO "./companylist.json"
FROM "companylist.csv"
WITH CSV FORMAT;

INSERT OVERWRITE "file://test2.csv" (Symbol, Sector, Industry, LastTrade)
SELECT Symbol, Sector, Industry, LastSale FROM "./companylist.csv"
WHERE Industry = "Precious Metals";

INSERT OVERWRITE "test2.json" (Symbol, Sector, Industry, LastSale)
SELECT Symbol, Sector, Industry, LastSale FROM "./companylist.csv"
WHERE Industry = "Precious Metals";

************************************************************************
*       GROUP BY testing
************************************************************************

SELECT Process, COUNT(*) as Total
INTO './report-info.csv'
FROM 'report-data.csv' group by Process;


SELECT Process, COUNT(*) as Total FROM 'report-data.csv' group by Process;

************************************************************************
*       JSON testing
************************************************************************

SELECT * FROM '1495582154423.json' WITH JSON PATH ('data') LIMIT 1;

SELECT `data.Id`, `data.CreatedById`, `data.city`, `data.state`, `data.AnnualRevenue`, `data.Type`, `data.SystemModstamp` FROM '1495582154423.json';

SELECT Id, CreatedById, city, state, AnnualRevenue, Type, SystemModstamp FROM '1495582154423.json' WITH JSON PATH ('data');

DESCRIBE (SELECT * FROM '1495582154423.json' WITH JSON PATH ('data') LIMIT 1);

DESCRIBE (SELECT * FROM '1495582154423.json' LIMIT 1);

DESCRIBE (SELECT * FROM '1495582940879.json' LIMIT 1);

************************************************************************
*       Union testing
************************************************************************

SELECT Symbol, Name, Sector, Industry, `Summary Quote`
FROM 'companylist.csv'
WHERE Industry = 'Oil/Gas Transmission'
UNION
SELECT Symbol, Name, Sector, Industry, `Summary Quote`
FROM 'companylist.csv'
WHERE Industry = 'Integrated oil Companies'
UNION
SELECT Symbol, Name, Sector, Industry, `Summary Quote`
FROM 'companylist.csv'
WHERE Industry = 'Integrated oil Companies';

************************************************************************
*       Functions
************************************************************************

CREATE FUNCTION getData(name String) AS RETURN @name;

CREATE FUNCTION getData(name String) AS
BEGIN
   RETURN @name
END;

SELECT getData('Hello World');

SHOW FUNCTIONS;

************************************************************************
*       Procedures
************************************************************************

CREATE PROCEDURE copyData AS
BEGIN
   SELECT Symbol, Name, Sector, Industry, LastSale, MarketCap
   FROM 'companylist.csv'
   WHERE Industry = 'Consumer Specialties'
END;

CREATE PROCEDURE copyData() AS
BEGIN
   SELECT Symbol, Name, Sector, Industry, LastSale, MarketCap
   FROM 'companylist.csv'
   WHERE Industry = 'Consumer Specialties'
END;

CREATE PROCEDURE copyData(OUT name String) AS
BEGIN
   SELECT @name
END;

CALL copyData('Hello World');

SHOW PROCEDURES;

CREATE PROCEDURE doIt() AS
BEGIN
   declare @n int;
   set @n = 1;
   set @n = @n + 1;
   set @n = @n + 1;
   select @n
END;

************************************************************************
*       VIEW testing
************************************************************************

CREATE VIEW 'OilAndGas' AS
SELECT Symbol, Name, Sector, Industry, `Summary Quote`
FROM 'companylist.csv'
WHERE Industry = 'Oil/Gas Transmission';

